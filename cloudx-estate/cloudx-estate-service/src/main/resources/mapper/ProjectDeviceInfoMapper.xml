<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aurine.cloudx.estate.mapper.ProjectDeviceInfoMapper">

    <resultMap id="projectDeviceInfoMap" type="com.aurine.cloudx.estate.entity.ProjectDeviceInfo">
        <id property="deviceId" column="deviceId"/>
        <result property="deviceCode" column="deviceCode"/>
        <result property="deviceName" column="deviceName"/>
        <result property="deviceType" column="deviceType"/>
        <result property="deviceAlias" column="deviceAlias"/>
        <result property="status" column="dStatus"/>
        <result property="active" column="isActive"/>
        <result property="buildingId" column="buildingId"/>
        <result property="unitId" column="unitId"/>
        <result property="houseId" column="houseId"/>
        <result property="deviceFeature" column="deviceFeature"/>
        <result property="passType" column="passType"/>
        <result property="deviceRegionId" column="deviceRegionId"/>
        <result property="sn" column="sn"/>
        <result property="mac" column="mac"/>
        <result property="ipv4" column="ipv4"/>
        <result property="ipv6" column="ipv6"/>
        <result property="port" column="dPort"/>
        <result property="picUrl" column="picUrl"/>
        <result property="qrCode" column="qrCode"/>
        <result property="address" column="dAddress"/>
        <result property="cloudCtl" column="isCloudCtl"/>
        <result property="channel" column="channel"/>
        <result property="channelDesc" column="channelDesc"/>
        <result property="company" column="dCompany"/>
        <result property="companyAccount" column="companyAccount"/>
        <result property="companyPasswd" column="companyPasswd"/>
        <result property="hardVersion" column="hardVersion"/>
        <result property="softVersion" column="softVersion"/>
        <result property="originSystem" column="originSystem"/>
        <result property="lon" column="lon"/>
        <result property="lat" column="lat"/>
        <result property="alt" column="alt"/>
        <result property="gisArea" column="gisArea"/>
        <result property="gisType" column="gisType"/>
        <result property="operator" column="operator"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
    </resultMap>


    <select id="pageVo" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoPageVo">
        select d.deviceId ,d.deviceName,d.deviceCode,d.deviceType,d.deviceEntityId ,d.deviceAlias,
        (SELECT COUNT(*) FROM project_device_monitor_conf
        WHERE project_device_monitor_conf.deviceTypeId = d.deviceType AND project_device_monitor_conf.projectId =
        d.projectId) 'checkItemNum',
        (with recursive r as
        (
        select * from project_frame_info s1 where s1.entityId = d.deviceEntityId
        union all
        select s1.* from project_frame_info s1, r where s1.entityId = r.puid
        ) select group_concat(r.entityName order by level desc SEPARATOR '-') from r group by r.projectid ) as
        deviceEntityName,
        d.deviceRegionId ,d.dStatus status,d.createTime ,pdr.regionName deviceRegionName,d.sn
        from project_device_info d left join project_device_region pdr on d.deviceRegionId = pdr.regionId
        <where>
            <!--设备类型id 及项目id 必填-->
            and d.deviceType = #{query.deviceTypeId}
            <if test="query.deviceName!=null and query.deviceName!=''">
                and (d.deviceName like concat('%',#{query.deviceName},'%')
                or d.deviceAlias like concat('%',#{query.deviceName},'%'))
            </if>
            <if test="query.deviceCode!=null and query.deviceCode!=''">
                and d.deviceCode like concat('%',#{query.deviceCode},'%')
            </if>
            <if test="query.sn!=null and query.sn!=''">
                and d.sn like concat('%',#{query.sn},'%')
            </if>
            <if test="query.status!=null and query.status!=''">
                and d.dstatus = #{query.status}
            </if>
            <if test="query.deviceRegionId!=null and query.deviceRegionId!=''">
                and d.deviceRegionId = #{query.deviceRegionId}
            </if>
        </where>
    </select>


    <select id="getProjectDeviceInfoById" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoVo">
        select d.*,
               d.dCompany                                       company,
               d.dStatus                                        status,
               d.isActive                                       active,
               d.isBlueTeeth                                    blueTeeth,
               d.dPort                                          port,
               pbi.buildingName,
               pfi.entityName,
               if(d.deviceRegionId = '1', '社区', pdr.regionName) deviceRegionName
        from project_device_info d
                 left join project_building_info pbi on d.buildingId = pbi.buildingId
                 left join project_frame_info pfi
                           on d.unitId = pfi.entityId and pfi.isUnit = '2'
                 left join project_device_region pdr on d.deviceRegionId = pdr.regionId
        where d.deviceId = #{id}
    </select>

    <!--分页查询监控设备-->
    <select id="pageCameraVo" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceCameraVo">
        select d.deviceId ,d.deviceName,d.deviceCode,d.deviceType,d.deviceEntityId ,
        (
        SELECT COUNT(*) FROM project_device_monitor_conf
        WHERE project_device_monitor_conf.deviceTypeId = d.deviceType AND project_device_monitor_conf.projectId =
        d.projectId
        ) 'checkItemNum',
        (with recursive r as
        (
        select * from project_frame_info s1 where s1.entityId = d.deviceEntityId
        union all
        select s1.* from project_frame_info s1, r where s1.entityId = r.puid
        ) select group_concat(r.entityName order by level desc SEPARATOR '-') from r group by r.projectid ) as
        deviceEntityName,
        d.deviceRegionId ,d.dStatus status,d.createTime ,pdr.regionName deviceRegionName,d.sn ,
        attr1.attrValue belongToDeviceId,info.deviceName belongToDeviceName,info.deviceCode
        belongToDeviceCode,attr2.attrValue monitorType
        ,d.deviceDesc
        from project_device_info d left join project_device_region pdr on d.deviceRegionId = pdr.regionId
        left join project_device_attr attr1 on attr1.attrCode='attachDeviceId' and attr1.deviceId=d.deviceId and
        attr1.projectId=d.projectId
        left join project_device_info info on info.deviceId=attr1.attrValue
        left join project_device_attr attr2 on attr2.attrCode='monitorDeviceType' and attr2.deviceId=d.deviceId and
        attr2.projectId=d.projectId
        <where>
            <!--设备类型id 及项目id 必填-->
            and d.deviceType = #{query.deviceTypeId}
            <if test="query.deviceName!=null and query.deviceName!=''">
                and d.deviceName like concat('%',#{query.deviceName},'%')
            </if>
            <if test="query.sn!=null and query.sn!=''">
                and d.sn like concat('%',#{query.sn},'%')
            </if>
            <if test="query.deviceCode!=null and query.deviceCode!=''">
                and d.deviceCode like concat('%',#{query.deviceCode},'%')
            </if>
            <if test="query.status!=null and query.status!=''">
                and d.dstatus = #{query.status}
            </if>
            <if test="query.deviceRegionId!=null and query.deviceRegionId!=''">
                and d.deviceRegionId = #{query.deviceRegionId}
            </if>
        </where>
    </select>

    <!--查询出巡点拥有的设备列表-->
    <select id="listDeviceByPointId" resultType="com.aurine.cloudx.estate.vo.ProjectPointDeviceVo">
        SELECT device_info.deviceId,
               device_info.deviceCode,
               device_info.sn,
               device_info.deviceName,
               device_info.deviceType                                                 'deviceType',
               device_info.deviceRegionId                                             'regionId',
               device_region.regionName,
               device_type.deviceTypeName,
               (SELECT COUNT(*)
                FROM project_device_monitor_conf
                WHERE project_device_monitor_conf.deviceTypeId = device_info.deviceType
                  AND project_device_monitor_conf.projectId = device_rel.projectId)   'checkItemNum',
               CONCAT_WS('-', building.entityName, unit.entityName, house.entityName) 'address'
        FROM project_inspect_point_device_rel device_rel
                 LEFT JOIN project_inspect_point_conf point_conf ON point_conf.pointId = device_rel.pointId
                 LEFT JOIN project_device_info device_info ON device_info.deviceId = device_rel.deviceId
                 LEFT JOIN project_device_type device_type ON device_type.deviceTypeId = device_info.deviceType
                 LEFT JOIN project_frame_info house ON house.entityId = device_info.houseId
                 LEFT JOIN project_frame_info unit ON unit.entityId = device_info.unitId
                 LEFT JOIN project_frame_info building ON building.entityId = device_info.buildingId
                 LEFT JOIN project_device_region device_region ON device_region.regionId = device_info.deviceRegionId
        WHERE point_conf.pointId = #{pointId}
          AND device_info.deviceId != ''
    </select>
    <select id="getByDeviceCode" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoProxyVo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.thirdPartyCode = #{thirdPartyCode}
    </select>
    <select id="getByThirdPartyCode" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoProxyVo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.thirdPartyCode = #{thirdPartyCode}
    </select>
    <select id="getByDeviceSn" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoProxyVo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.sn = #{deviceSn}
    </select>

    <select id="getByDeviceId" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoProxyVo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.deviceId = #{deviceId}
    </select>

    <select id="listByProjectId" resultType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoProxyVo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.projectId = #{projectId}
          and project_device_info.deviceType in ('2', '3')
    </select>
    <select id="listByDeviceType" resultType="com.aurine.cloudx.estate.entity.ProjectDeviceInfo">
        SELECT project_device_info.*,
               project_device_info.tenant_id as tenantId
        FROM project_device_info
        WHERE project_device_info.projectId = #{projectId}
          and project_device_info.deviceType = #{type}
    </select>


    <select id="listByBuildingIdList" resultType="java.lang.String">
        SELECT
        deviceId
        FROM
        project_building_info building_info
        LEFT JOIN project_device_info device_info ON building_info.buildingId = device_info.buildingId
        WHERE building_info.buildingId IN
        <foreach collection="buildingIdList" item="buildingId" index="index" open="(" close=")" separator=",">
            #{buildingId}
        </foreach>

    </select>
    <select id="findRichByType" resultType="com.aurine.cloudx.estate.entity.ProjectDeviceInfo"  parameterType="com.aurine.cloudx.estate.vo.ProjectDeviceInfoFormVo">
        select info.* from project_device_info info left join sys_device_product_map sdpm on info.productId =
        sdpm.productId
        where
        sdpm.capability like 'richTextNotice' and info.dStatus!='4'
        <if test="param!=null and param.types!=null and param.types.size>0">
            and info.deviceType in
            <foreach collection="param.types" item="type" index="index" open="(" close=")" separator=",">
                ${type}
            </foreach>
        </if>
        <if test="param!=null and param.buildingId!=null ">
            and info.buildingId =#{param.buildingId}
        </if>
        <if test="param!=null and param.UnitId!=null">
            and info.UnitId =#{param.unitId}
        </if>
        <if test="param!=null and param.unitId!=null">
            and info.unitId =#{param.unitId}
        </if>
        <if test="param!=null and param.deviceName!=null and param.deviceName !=''">
            and info.deviceName like concat('%',#{param.deviceName},'%')
        </if>
    </select>
    <select id="countBySn" resultType="java.lang.Integer">
        select 1 from project_device_info
        where
        sn =#{sn}
        <if test="deviceId!=null and deviceId!=''">
            and deviceId!=#{deviceId}
        </if>
    </select>
    <select id="countThirdPartyCode" resultType="java.lang.Integer">
        SELECT count(*)
        FROM project_device_info
        WHERE project_device_info.countThirdPartyCode = #{countThirdPartyCode}
    </select>


    <insert id="saveDeviceProxy">
        INSERT
        INTO project_device_info
        (deviceId,
         deviceCode,
         deviceName,
         deviceType,
         deviceAlias,
         deviceDesc,
         projectId,
         dStatus,
         isActive,
         buildingId,
         unitId,
         houseId,
         passType,
         deviceRegionId,
         deviceEntityId,
         sn,
         mac,
         location,
         thirdpartyCode,
         thirdpartNo,
         lon,
         lat,
         alt,
         gisArea,
         gisType,
         isCloudCtl,
         productId,
         tenant_id,
         operator)
        VALUES (#{deviceInfo.deviceId},
                #{deviceInfo.deviceCode},
                #{deviceInfo.deviceName},
                #{deviceInfo.deviceType},
                #{deviceInfo.deviceAlias},
                #{deviceInfo.deviceDesc},
                #{deviceInfo.projectId},
                #{deviceInfo.status},
                #{deviceInfo.active},
                #{deviceInfo.buildingId},
                #{deviceInfo.unitId},
                #{deviceInfo.houseId},
                #{deviceInfo.passType},
                #{deviceInfo.deviceRegionId},
                #{deviceInfo.deviceEntityId},
                #{deviceInfo.sn},
                #{deviceInfo.mac},
                #{deviceInfo.location},
                #{deviceInfo.thirdpartyCode},
                #{deviceInfo.thirdpartNo},
                #{deviceInfo.lon},
                #{deviceInfo.lat},
                #{deviceInfo.alt},
                #{deviceInfo.gisArea},
                #{deviceInfo.gisType},
                #{deviceInfo.cloudCtl},
                #{deviceInfo.productId},
                #{deviceInfo.tenantId},
                #{deviceInfo.operator})

    </insert>
</mapper>
