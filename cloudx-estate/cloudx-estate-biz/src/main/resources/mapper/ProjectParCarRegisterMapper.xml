<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~
  ~      Copyright (c) 2018-2025, lengleng All rights reserved.
  ~
  ~  Redistribution and use in source and binary forms, with or without
  ~  modification, are permitted provided that the following conditions are met:
  ~
  ~ Redistributions of source code must retain the above copyright notice,
  ~  this list of conditions and the following disclaimer.
  ~  Redistributions in binary form must reproduce the above copyright
  ~  notice, this list of conditions and the following disclaimer in the
  ~  documentation and/or other materials provided with the distribution.
  ~  Neither the name of the pig4cloud.com developer nor the names of its
  ~  contributors may be used to endorse or promote products derived from
  ~  this software without specific prior written permission.
  ~  Author: lengleng (wangiegie@gmail.com)
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aurine.cloudx.estate.mapper.ProjectParCarRegisterMapper">

    <resultMap id="projectParCarRegisterMap" type="com.aurine.cloudx.estate.entity.ProjectParCarRegister">
        <id property="registerId" column="registerId"/>
        <result property="plateNumber" column="plateNumber"/>
        <result property="parkId" column="parkId"/>
        <result property="parkPlaceId" column="parkPlaceId"/>
        <result property="parkPlaceName" column="parkPlaceName"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="isCancelled" column="isCancelled"/>
        <result property="operator" column="operator"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
    </resultMap>

    <!-- 分页查询-->
    <select id="pageCarRegister" resultType="com.aurine.cloudx.estate.vo.ProjectParCarRegisterRecordVo"
            parameterType="com.aurine.cloudx.estate.vo.ProjectParCarRegisterSeachConditionVo">
        SELECT
        info.parkName,
        place.placeName,
        place.relType,
        IF
        ( rule_car.ruleType IS NULL, rule_place.ruleType, rule_car.ruleType ) ruleType,
        IF
        ( reg.ruleId IS NULL, place.ruleId, reg.ruleId ) ruleId,
        person.personName,
        reg.*
        FROM
        project_par_car_register reg
        JOIN project_parking_info info ON reg.parkId = info.parkId
        JOIN project_parking_place place ON reg.parkPlaceId = place.placeId
        LEFT JOIN project_car_info car ON reg.carUid = car.carUid
        LEFT JOIN project_person_info person ON person.personId = car.personId
        LEFT JOIN project_park_billing_rule rule_place ON place.ruleId = rule_place.ruleId
        LEFT JOIN project_park_billing_rule rule_car ON rule_car.ruleId = reg.ruleId

        <where>
            info.projectId = #{projectId}
            <if test="query.parkId !=null and query.parkId != '' ">
                AND reg.parkId = #{query.parkId}
            </if>
            <if test="query.plateNumber !=null and query.plateNumber != '' ">
                AND reg.plateNumber like concat('%', #{query.plateNumber},'%')
            </if>
            <if test="query.personName !=null and query.personName != '' ">
                AND person.personName like concat('%', #{query.personName},'%')
            </if>
            <if test="query.relType !=null and query.relType != '' ">
                AND place.relType like concat('%', #{query.relType},'%')
            </if>
        </where>
        order by reg.createTime desc ,reg.parkPlaceName
    </select>

    <select id="getMultiCarNum" resultType="int">
        SELECT count(*) FROM (
            SELECT
            parkPlaceId,
            COUNT( * ) carNum
            FROM
            project_par_car_register register
            LEFT JOIN project_parking_place place ON place.placeId = register.parkPlaceId
            WHERE place.placeName IS NOT NULL AND place.placeName != ''
            GROUP BY
            parkPlaceId
            ) tmp_place_car_num WHERE carNum > 1
    </select>
    <select id="pageCarRegisterExport" resultType="com.aurine.cloudx.estate.excel.parking.ParCarRegisterExportExcel"
            parameterType="com.aurine.cloudx.estate.vo.ProjectParCarRegisterSeachConditionVo">
        SELECT
        info.parkName,
        place.placeName,
        place.relType,
        rule_car.ruleName,
        IF
        ( rule_car.ruleType IS NULL, rule_place.ruleType, rule_car.ruleType ) ruleType,
        IF
        ( reg.ruleId IS NULL, place.ruleId, reg.ruleId ) ruleId,
        person.personName,
        reg.*
        FROM
        project_par_car_register reg
        JOIN project_parking_info info ON reg.parkId = info.parkId
        JOIN project_parking_place place ON reg.parkPlaceId = place.placeId
        LEFT JOIN project_car_info car ON reg.carUid = car.carUid
        LEFT JOIN project_person_info person ON person.personId = car.personId
        LEFT JOIN project_park_billing_rule rule_place ON place.ruleId = rule_place.ruleId
        LEFT JOIN project_park_billing_rule rule_car ON rule_car.ruleId = reg.ruleId

        <where>
            info.projectId = #{projectId}
            <if test="query.parkId !=null and query.parkId != '' ">
                AND reg.parkId = #{query.parkId}
            </if>
            <if test="query.plateNumber !=null and query.plateNumber != '' ">
                AND reg.plateNumber like concat('%', #{query.plateNumber},'%')
            </if>
            <if test="query.personName !=null and query.personName != '' ">
                AND person.personName like concat('%', #{query.personName},'%')
            </if>
            <if test="query.relType !=null and query.relType != '' ">
                AND place.relType like concat('%', #{query.relType},'%')
            </if>
        </where>
        order by reg.createTime desc ,reg.parkPlaceName
    </select>

</mapper>
